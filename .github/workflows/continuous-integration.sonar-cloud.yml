name: "Continuous integration - SonarCloud Quality Analyses"
on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true

jobs:
  sonar-cloud:
    name: "SonarCloud Quality Analyses"
    runs-on: ubuntu-latest
    steps:
    ###
    # Checkout repository
    ###
    - name: Checkout repository
      uses: actions/checkout@v3
    ###
    # ðŸ§° Set up JDK 11
    ###
    - name: ðŸ§° Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 1.11
    ###
    # ðŸ§° Cache SonarCloud packages
    ###
    - name: ðŸ§° Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    ###
    # ðŸ§° Install SonarCloud scanner
    ###
    - name: ðŸ§° Install SonarCloud scanner
      shell: pwsh
      run: |-
        [System.IO.Directory]::CreateDirectory('${{github.workspace}}/.sonar/scanner')
        dotnet tool install dotnet-sonarscanner --tool-path '${{github.workspace}}/.sonar/scanner'
    ###
    # ðŸ—ƒ Restore 'library-binaries'
    ###
    - name: ðŸ—ƒ Restore 'library-binaries'
      uses: actions/download-artifact@v3
      with:
        name: library-binaries
        path: ./src
    ###
    # ðŸ—ƒ Restore 'unit-test-coverage'
    ###
    - name: ðŸ—ƒ Restore 'unit-test-coverage'
      uses: actions/download-artifact@v3
      with:
        name: unit-test-coverage
        path: ./test-results/coverage
    ###
    # ðŸ—ƒ Restore 'sonar-cloud'
    ###
    - name: ðŸ—ƒ Restore 'sonar-cloud'
      uses: actions/download-artifact@v3
      with:
        name: sonar-cloud
        path: ./.sonarqube
    ###
    # ðŸ”¬ Perform SonarCloud Analysis
    ###
    - name: ðŸ”¬ Perform SonarCloud Analysis
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: >-
        ./.sonar/scanner/dotnet-sonarscanner end
        /d:sonar.login="${{ secrets.SONAR_TOKEN }}"