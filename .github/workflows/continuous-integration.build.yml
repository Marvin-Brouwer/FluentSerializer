name: "Continuous integration - Build"
on:
  workflow_call:

permissions:
  contents: read

env:
  DOTNET_VERBOSITY: "${{ (secrets.ACTIONS_STEP_DEBUG == true) && 'detailed' || 'minimal' }}"
  #https://github.com/dotnet/core/issues/4749#issuecomment-1332612225
  CLR_OPENSSL_VERSION_OVERRIDE: 3

jobs:
  build:
    name: "Build ${{ matrix.version.displayName }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version: [
          {displayName: "net 9.0", sdkVersion: "9.0.x", framework: "net9.0"},
          {displayName: "net 8.0",sdkVersion: "8.0.x", framework: "net8.0"},
          {displayName: "netstandard 2.1",sdkVersion: "3.1.x", framework: "netstandard2.1"},
          {displayName: "netstandard 2.0",sdkVersion: "3.1.x", framework: "netstandard2.0"}
        ]
    steps:
    ###
    # Checkout repository
    ###
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true
    ###
    # ðŸ§° Install .Net SDKs
    #
    # Configure the pipeline to use the correct .Net sdk versions
    ###
    - name: ðŸ§° Install .Net SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.version.sdkVersion }}
    ###
    # ðŸ›  Build
    ###
    - name: ðŸ›  Build
      run: |-
        dotnet build --nologo --configuration "Release" --verbosity ${{ env.DOTNET_VERBOSITY }} --framework ${{ matrix.version.framework }}
    ###
    # ðŸ—ƒ Publish 'library-binaries-${{ matrix.version.framework }}' artifacts
    ###
    - name: ðŸ—ƒ Publish 'library-binaries-${{ matrix.version.framework }}' artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: library-binaries-${{ matrix.version.framework }}
        path: |
          ./src/**/bin/Release/${{ matrix.version.framework }}/*.*
          !./src/*.Tests
          !./src/*.TestUtils
          !./src/*.Usecase.*
          !./src/*.Benchmark
          !./src/*.BenchmarkUtils
        retention-days: 20