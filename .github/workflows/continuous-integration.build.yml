name: "Continuous integration - Build"
on:
  workflow_call:

permissions:
  contents: read

env:
  DOTNET_VERBOSITY: "${{ (secrets.ACTIONS_STEP_DEBUG == true) && 'detailed' || 'minimal' }}"

jobs:
  build:
    name: "Build ${{ matrix.version.displayName }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        version: [
          {displayName: "net 9.0", sdkVersion: "9.0.x", framework: "net9.0", oldSSL: false},
          {displayName: "net 8.0",sdkVersion: "9.0.x", framework: "net8.0", oldSSL: false},
          {displayName: "netstandard 2.1",sdkVersion: "3.1.x", framework: "netstandard2.1", oldSSL: true},
          {displayName: "netstandard 2.0",sdkVersion: "3.1.x", framework: "netstandard2.0", oldSSL: true}
        ]
    steps:
    ###
    # Checkout repository
    ###
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true
    ###
    # ðŸ§° Cache: Fix Old SSL Requirement
    #
    # https://github.com/dotnet/core/issues/4749#issuecomment-1200245422
    ###
    - name: 'ðŸ§° Cache: Fix Old SSL Requirement 1.1'
      id: cache-ssl-downgrade
      uses: actions/cache@v4
      if: ${{ matrix.version.oldSSL }}
      with:
        path: /usr/local/lib/openssl-1.1.1c
        key: ${{ runner.os }}-cache-ssl-downgrade-1-1
    ###
    # ðŸ§° Fix Old SSL Requirement
    #
    # https://github.com/dotnet/core/issues/4749#issuecomment-1200245422
    ###
    - name: ðŸ§° Fix Old SSL Requirement 1.1
      if: ${{ matrix.version.oldSSL }}
      run: |-
        if [ ! -d "openssl-1.1.1c" ]; then
          wget https://www.openssl.org/source/openssl-1.1.1c.tar.gz
          tar -xzvf openssl-1.1.1c.tar.gz
        fi
        cd openssl-1.1.1c
        ./config
        make
        sudo make install
    ###
    # ðŸ§° Install .Net SDKs
    #
    # Configure the pipeline to use the correct .Net sdk versions
    ###
    - name: ðŸ§° Install .Net SDKs
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.version.sdkVersion }}
    ###
    # ðŸ›  Build
    ###
    - name: ðŸ›  Build
      run: |-
        dotnet build --nologo --configuration "Release" --verbosity ${{ env.DOTNET_VERBOSITY }}
    ###
    # ðŸ—ƒ Publish 'library-binaries-${{ matrix.version.framework }}' artifacts
    ###
    - name: ðŸ—ƒ Publish 'library-binaries-${{ matrix.version.framework }}' artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: library-binaries-${{ matrix.version.framework }}
        path: |
          ./src/**/bin/Release/${{ matrix.version.framework }}/*.*
          !./src/*.Tests
          !./src/*.TestUtils
          !./src/*.Usecase.*
          !./src/*.Benchmark
          !./src/*.BenchmarkUtils
        retention-days: 20