name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, edited, synchronize, reopened, review_requested, auto_merge_enabled]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: ðŸ—ƒ Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  | 
          3.1.x
          5.0.x
    - name: ðŸ—ƒ Restore dependencies
      run: dotnet restore
    - name: ðŸ›  Build
      run: dotnet build --no-restore --nologo --configuration "Release"
    - name: ðŸ—ƒ Upload './src/**/bin/Release'
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: ./src/**/bin/Release
        retention-days: 1
      if: ${{ always() }}

  tests:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: ðŸ—ƒ Setup .NET tools
      run: |-
        dotnet tool install --global dotnet-reportgenerator-globaltool
        dotnet tool install --global dotnet-coverage
        dotnet tool install --global coverlet.console
    - name: ðŸ—ƒ Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  | 
          3.1.x
          5.0.x
    - name: ðŸ—ƒ Restore './src/**/bin/Release'
      uses: actions/download-artifact@v2
      with:
        name: build-files
        path: ./src      
    - name: ðŸ§ª Run unit tests
      run: >- 
        dotnet test 
        --logger "console;verbosity=detailed" 
        --logger GitHubActions 
        --logger "trx;LogFileName=test-results.trx" 
        --no-build --nologo --configuration=Release --results-directory "./test-results" 
        --filter Category=UnitTest 
        --collect "DotnetCodeCoverage" --collect "XPlat Code coverage" 
        /p:CollectCoverage=true /p:CoverletOutputFormat=opencover 
        /p:CoverletOutput="./test-results/Coverage/" /p:MergeWith="./test-results/Coverage/"
        /p:Exclude="[*Tests]*%2c[*TestUtils*]*%2c[*UseCase*]*" 
        "FluentSerializer.sln"
      working-directory: ${{github.workspace}}
    - name: ðŸ§ª Run use-case tests
      run: >- 
        dotnet test 
        --logger "console;verbosity=detailed" 
        --logger GitHubActions 
        --no-build --nologo --configuration=Release 
        --filter Category=UseCase 
        "FluentSerializer.sln"
      working-directory: ${{github.workspace}}
    - name: ðŸ§ª Generate unit test code-coverage report
      run: >- 
        reportgenerator 
        -reports:"./test-results/*/coverage.cobertura.xml" 
        -targetdir:"./test-results/coverage" 
        -reporttypes:HtmlInline_AzurePipelines;Cobertura
      working-directory: ${{github.workspace}}
    # TODO: publish code coverage
    - name: ðŸ—ƒ Upload './test-results/coverage'
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: ./test-results/coverage
        retention-days: 1
      if: ${{ always() }}