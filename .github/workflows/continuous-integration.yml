name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, edited, synchronize, reopened, review_requested, auto_merge_enabled]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: ðŸ—ƒ Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  | 
          3.1.x
          5.0.x
    - name: ðŸ—ƒ Restore dependencies
      run: dotnet restore
    - name: ðŸ›  Build
      run: dotnet build --no-restore --nologo --configuration "Release"
    - name: ðŸ—ƒ Upload './src/**/bin'
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: ./src/**/bin/Release
        retention-days: 1
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  tests:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: ðŸ—ƒ Setup .NET tools
      run: |-
        dotnet tool install --global dotnet-coverage
    - name: ðŸ—ƒ Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  | 
          3.1.x
          5.0.x
    - name: ðŸ—ƒ Restore './src/**/bin'
      uses: actions/download-artifact@v2
      with:
        name: build-files
        path: ./src      
    # TODO: expose code coverage
    - name: ðŸ§ª Run unit tests
      run: >- 
        dotnet test "./**/bin/**/*Tests.dll" --filter Category=UnitTest
        --nologo --no-build --configuration Release --results-directory "./test-results"
        --logger GitHubActions
        --logger "trx;LogFileName=test-results.trx"
        --logger "console;verbosity=detailed" 
      working-directory: ${{github.workspace}}
    # - name: ðŸ§ª Measure unit test code-coverage
    #   run: >- 
    #     coverlet "." --format opencover --format lcov --format cobertura
    #     --target "dotnet" 
    #     --targetargs "test "./**/bin/**/*Tests.dll" --configuration Release --no-build --filter Category=UnitTest"
    #     --exclude "[*Test*]*,[*UseCase*]"*
    #   working-directory: ${{github.workspace}}
    - name: ðŸ§ª Run use-case tests
      run: >- 
        dotnet test "./**/bin/**/*UseCase*.dll" --filter Category=UseCase
        --nologo --no-build --configuration Release 
        --logger GitHubActions
        --logger "console;verbosity=detailed" 
      working-directory: ${{github.workspace}}