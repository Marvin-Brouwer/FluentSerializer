name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, edited, synchronize, reopened, review_requested, auto_merge_enabled]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  | 
          2.1.x
          3.1.x
          5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --nologo --configuration "Release"
    # - name: Test
    #   run: >- 
    #     dotnet test --nologo --no-build --configuration Release 
    #     --logger "console;verbosity=detailed" 
    - name: Upload dotnet binaries
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: ./src/**/bin
        retention-days: 1
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  tests:

    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version:  | 
          3.1.x
          5.0.x
    - name: Download dotnet binaries
      uses: actions/download-artifact@v2
      with:
        name: build-files
        path: ./src      
    - name: Test
      run: >- 
        dotnet test "${{github.workspace}}/FluentSerializer.sln" --nologo --no-build --configuration Release 
      working-directory: ${{github.workspace}}
    # TODO:
    # - name: Unit test
    #   run: >- 
    #     dotnet test --nologo --no-build --configuration "Release" --filter Category=UnitTest
    #     --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"
    #   working-directory: .
    # - name: Use-case examples
    #   run: >- 
    #     dotnet test --nologo --no-build --configuration "Release" --filter Category=UseCase;"
    #   working-directory: .
    # TODO: Upload test results
    # TODO: Measure code coverage
    # add report as PR comment (if PR)
    # TODO: https://github.com/Tyrrrz/GitHubActionsTestLogger
    # TODO: remove
    - name: Upload files for testing
      uses: actions/upload-artifact@v2
      with:
        name: all-files
        path: .
        retention-days: 1
      if: ${{ always() }}