name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Define the version to be published (SemVer)'
        required: true
        type: string
      package:
        description: 'Select which package to stage for publish'
        required: true
        default: 'warning'
        type: choice
        options:
        - FluentSerializer.Core
        - FluentSerializer.Json
        - FluentSerializer.Json.DependencyInjection.NetCoreDefault
        - FluentSerializer.Json.Converter.DefaultJson
        - FluentSerializer.Xml
        - FluentSerializer.Xml.DependencyInjection.NetCoreDefault
        - FluentSerializer.Xml.Converter.DefaultXml

jobs:
  dotnet-push:
    name: "Push to NuGet.org"

    runs-on: ubuntu-latest

    environment:
      name: NuGet
      url: "https://www.nuget.org/packages/${{ github.event.inputs.package }}/${{ github.event.inputs.version }}"

    steps:
    ###
    # Checkout repository
    ###
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true
    ###
    # ðŸ§° Setup .Net
    #
    # Configure the pipeline to use the correct .Net sdk versions
    ###
    - name: ðŸ§° Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          7.0.x
          6.0.x
          3.1.x
    ###
    # ðŸ”§ Fix version
    #
    # Override the libraries version info
    ###
    - name: ðŸ”§ Fix version
      shell: pwsh
      run: |-
        ${{github.workspace}}/.github/workflows/scripts/update-version.ps1 `
          -Version "${{ github.event.inputs.version }}" `
          -File "${{github.workspace}}/src/${{ github.event.inputs.package }}/${{ github.event.inputs.package }}.csproj";
    ###
    # ðŸ”§ Fix release notes
    #
    # Override the libraries release notes info
    ###
    - name: ðŸ”§ Fix release notes
      shell: pwsh
      run: |-
        ${{github.workspace}}/.github/workflows/scripts/update-release-notes.ps1 `
          -File "${{github.workspace}}/src/${{ github.event.inputs.package }}/${{ github.event.inputs.package }}.csproj";
    ###
    # ðŸ”§ Update NuGet readme
    #
    # Update the NuGet readme with additional release metadata
    ###
    - name: ðŸ”§ Update NuGet readme
      shell: pwsh
      run: |-
        ${{github.workspace}}/.github/workflows/scripts/update-package-readme.ps1 `
          -Path "${{github.workspace}}/src/${{ github.event.inputs.package }}";
    ###
    # ðŸ—ƒ Restore dependencies
    #
    # Fill the NuGet store with necessary libraries
    ###
    - name: ðŸ—ƒ Restore dependencies
      run: dotnet restore
    ###
    # ðŸ›  Build
    #
    # Build the library code for later use
    ###
    - name: ðŸ›  Build
      run: >-
        dotnet build
        "${{github.workspace}}/src/${{ github.event.inputs.package }}/${{ github.event.inputs.package }}.csproj"
        --no-restore
        --nologo
        --configuration "Release"
        -p:Version=${{ github.event.inputs.version }}
    ###
    # ðŸ—³ Push package
    #
    # Pack and push the package
    ###
    - name: ðŸ—³ Push package
      run: >-
        sudo dotnet nuget push ${{github.workspace}}/src/${{ github.event.inputs.package }}/bin/Release/${{ github.event.inputs.package }}.${{ github.event.inputs.version }}.nupkg
        --api-key ${{ secrets.NUGET_TOKEN }}
        --source https://api.nuget.org/v3/index.json
      working-directory: ${{github.workspace}}/src/${{ github.event.inputs.package }}